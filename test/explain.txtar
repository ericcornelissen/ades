# Existing rule
exec ades -explain 'ADES100'
cmp stdout $WORK/snapshots/ades100-stdout.txt
! stderr .

# Non-existent rule
! exec ades -explain 'foobar'
! stdout .
stderr 'Unknown rule "foobar"'


-- snapshots/ades100-stdout.txt --
ADES100 - Expression in 'run:' directive

When a workflow expression appears in a 'run:' directive you can avoid any potential attacks by
extracting the expression into an environment variable and using the environment variable instead.

For example, given the workflow snippet:

    - name: Example step
      run: |
        echo 'Hello ${{ inputs.name }}'

it can be made safer by converting it into:

    - name: Example step
      env:
        NAME: ${{ inputs.name }} # <- Assign the expression to an environment variable
      run: |
        echo "Hello $NAME"
      #      ^      ^^^^^
      #      |      | Replace the expression with the environment variable
      #      |
      #      | Note: the use of double quotes is required in this example (for interpolation)
